Using following RDF data:
@prefix mf: <http://example.org/multifamily#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<mf:100RentalUnits> a mf:TotalRentalUnits .

<mf:101TotalUnits> a mf:TotalUnits .

<mf:1NonRevenueUnit> a mf:NonRevenueUnits .

<mf:ConventionalLoan> a mf:LoanType .

<mf:MidCityBank> a mf:Lender .

<mf:NSPDevelopmentPartners> a mf:OwnerEntity .

<mf:NSPManagementPartners> a mf:ManagementAgent .

<mf:OwnerAddress> a mf:OwnerAddress ;
    mf:hasCity "Mid City" ;
    mf:hasState "Ohio" ;
    mf:hasStreetAddress "600 Main Street" ;
    mf:hasZipCode "23445" .

<mf:SampleGardens> a mf:Property ;
    mf:annualEnergyConsumptionReductionCommitment "25%" ;
    mf:annualWaterConsumptionReductionCommitment "30%" ;
    mf:hasApprovalDate "01/04/2018" ;
    mf:hasApprovalDecision "yes" ;
    mf:hasApprovalNotes "Based on the strength and experience of the sponsor including managing other seniors assets in the same market and state for many years as well as the financial improvement of the asset, this supplemental transaction is recommended for Loan Committee Approval." ;
    mf:hasAssetManagementNotes "The property is maintained well and the rentals have met projected expectations." ;
    mf:hasAssetManagementNotesDate "01/05/2021" ;
    mf:hasGreenBuildingCertification "yes" ;
    mf:hasGreenBuildingCertificationAgency "BREEAM USA" ;
    mf:hasGreenBuildingUpgrades "Energy Start Appliances",
        "Energy efficient LED lighting" ;
    mf:hasInspectionDate "03/07/2020" ;
    mf:hasLender mf:MidCityBank ;
    mf:hasLenderContact mf:WallyLendor ;
    mf:hasLoanType mf:ConventionalLoan ;
    mf:hasManagementAddress mf:OwnerAddress ;
    mf:hasManagementAgent mf:NSPManagementPartners ;
    mf:hasManagementContact mf:SusanDeveloper ;
    mf:hasNonRevenueUnits mf:1NonRevenueUnit ;
    mf:hasOwnerAddress mf:OwnerAddress ;
    mf:hasOwnerContact mf:SusanDeveloper ;
    mf:hasOwnerEntity mf:NSPDevelopmentPartners ;
    mf:hasPCR "3" ;
    mf:hasPropertyAddress mf:SampleGardensAddress ;
    mf:hasPropertyInspectionAgency "urgent inspection llc" ;
    mf:hasPropertyInspector "Jane Jones" ;
    mf:hasPropertyName "Sample Gardens" ;
    mf:hasTotalRentalUnits mf:100RentalUnits ;
    mf:hasTotalUnits mf:101TotalUnits ;
    mf:hasUnits "101"^^xsd:int .

<mf:SampleGardensAddress> a mf:PropertyAddress ;
    mf:hasCity "Mid City" ;
    mf:hasLowIncomeUnits "20" ;
    mf:hasMSA "" ;
    mf:hasState "Ohio" ;
    mf:hasStreetAddress "123 Sample Street" ;
    mf:hasVeryLowIncomeUnits "10" ;
    mf:hasZipCode "23445" ;
    mf:isSmallMultifamilyUnitMeetingLowIncome "yes" .

<mf:SusanDeveloper> a mf:OwnerContact ;
    mf:hasEmail "susan@NSPDP.com" ;
    mf:hasName "Susan Developer" ;
    mf:hasPhone "(215) 555-1212" .

<mf:WallyLendor> a mf:LenderContact ;
    mf:hasEmail "wlendor@MCB.com" ;
    mf:hasName "Wally Lendor" ;
    mf:hasPhone "(215) 555-1214" .


    
And schema of neptune graph:
        Node properties are the following:
        [{'properties': [{'property': 'loan_lifecycle_state', 'type': 'STRING'}, {'property': 'isAffordableHousingEligible', 'type': 'STRING'}, {'property': 'IsGreenLoanEligible', 'type': 'STRING'}, {'property': 'loan_origination_date', 'type': 'STRING'}], 'labels': 'Loan'}, {'properties': [{'property': 'underwriting_result', 'type': 'STRING'}, {'property': 'underwriting_date', 'type': 'STRING'}, {'property': 'underwriter_comments', 'type': 'STRING'}, {'property': 'inspector_comments', 'type': 'STRING'}, {'property': 'number_of_units', 'type': 'INTEGER'}, {'property': 'inspection_score', 'type': 'STRING'}, {'property':'inspector_name', 'type': 'STRING'}, {'property': 'inspection_date', 'type': 'STRING'}, {'property': 'property_address', 'type': 'STRING'}, {'property': 'property_build_date', 'type': 'STRING'}, {'property': 'property_name', 'type': 'STRING'}], 'labels': 'Property'}]
        Relationship properties are the following:
        [{'type': 'securedBy', 'properties': []}]
        The relationships are the following:
        ['(:`Loan`)-[:`securedBy`]->(:`Property`)']
Create cypher queries to insert data from RDF into neptune database. The property node should merge into the property node with matching name. All connecting nodes to this node should have their properties updated if properties are referenced in the RDF. If other nodes are not referenced in the RDF, do not perform updates on those nodes. If the property of a node is not referenced in the RDF, do not update the property. The name of the property should exactly match what is found in the neptune graph schema, if it does not, a new property should be created. Only return the cypher query. Do not return an explanation of the cypher query. Convert all lists in the RDF to strings with the list data.
